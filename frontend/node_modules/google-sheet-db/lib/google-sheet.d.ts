import { ISheetProperty } from './types';
export interface IOptions {
    tokenPath?: string;
    credentialPath?: string;
    scopes?: string[];
    auth?: any;
}
declare class GoogleSheet {
    private SPREADSHEET_ID;
    private SCOPES;
    private TOKEN_PATH;
    private CREDENTIAL_PATH;
    private auth;
    constructor(spreadsheetId: string, options?: IOptions);
    private getNewToken;
    private authorize;
    authenticate(): Promise<unknown>;
    getSheets(): Promise<ISheetProperty[]>;
    createSheet(title: string): Promise<ISheetProperty[]>;
    insertRows(sheetId: number, startIndex: number, count: number): Promise<void>;
    removeRows(sheetId: number, startIndex: number, count: number): Promise<void>;
    writeData(range: string, values: string[][]): Promise<void>;
    applyHeaderStyle(sheetId: number): Promise<void>;
    readData(range: string): Promise<any[][]>;
}
export default GoogleSheet;
